<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[爬取ichunqiu的课程列表]]></title>
    <url>%2F2018%2F04%2F16%2F%E7%88%AC%E5%8F%96ichunqiu%E7%9A%84%E8%AF%BE%E7%A8%8B%E5%88%97%E8%A1%A8%2F</url>
    <content type="text"><![CDATA[0x00 模拟浏览器登录0x01 爬取课程数据0x02 把课程数据保存在Excel表格爬取了ichunqiu的全部课程，把课程名字，费用，课程时间，学习人数保存到Excel表格里 最后统计了一下，如果购买ichunqiu的全部360门课程，需要 13835 元，好贵，可恶。还好强网杯送了VIP 每门课的学习人数加起来有 ： 20338110 对你没看错，两百多万，:-( 看来很多大表哥都在认真学习，我需要继续加油 现在有点晚了，有空再详细写一下 把代码奉上:） 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283#!/usr/bin/python3# -*- coding: utf-8 -*-# @Time : 2018/4/16 20:04# @Author : Lhaihai# @File : 爬取ichunqiu的课程.py# @Software: PyCharm# @Blog : http://blog.Lhaihai.wang""" Description : 看了ADO大哥的Python视频，特来练练手"""import timefrom selenium import webdriverfrom selenium.webdriver.chrome.options import Optionsimport openpyxldef main(): url = 'https://user.ichunqiu.com/login?r=https%3A%2F%2Fwww.ichunqiu.com%2F' chrome_options = Options() chrome_options.add_argument('--headless') chrome_options.add_argument('--disable-gpu') browser = webdriver.Edge() browser.maximize_window() browser.implicitly_wait(10) browser.get(url) phonenumber = browser.find_element_by_id('username') phonenumber.send_keys('132xxxxxxxx') #ichunqiu用户名 password = browser.find_element_by_id('password') password.send_keys('xxxxxxxx') #密码 siginbutton = browser.find_elements_by_tag_name('button') siginbutton[1].click() zhishitixi = browser.find_element_by_link_text('知识体系') zhishitixi.click() pagesizetext = browser.find_element_by_class_name('paginmsg') pagesize = int(pagesizetext.text[1:3]) print(pagesize) time.sleep(5) fileName = 'ichunqiuCourse.xlsx' wb = openpyxl.load_workbook(fileName) sheet = wb['Sheet1'] coursenum = 1 for i in range(pagesize): print('第%s页：'%(i+1)) try: courses = browser.find_elements_by_class_name('coursedesc') except: courses = browser.find_elements_by_class_name('coursedesc') for course in courses: coursenum += 1 temp = str(course.text).split('\n') q = 0 for k in ['A','B','C','D']: sheet[k+str(coursenum)]=temp[q] q +=1 print(temp[0]+' '+temp[1]+' '+temp[2]+' '+temp[3]) time.sleep(30) forward = browser.find_element_by_link_text('下一页') forward.click() wb.save(fileName) time.sleep(10) browser.close() # headers = &#123; # 'Host': 'www.ichunqiu.com', # 'Upgrade-Insecure - Requests': '1', # 'User-Agent': 'Mozilla / 5.0(Windows NT 10.0; WOW64) AppleWebKit / 537.36(KHTML, like Gecko) Chrome / 65.0 .3325 .162 Safari / 537.36', # 'Cookie':'jsluid = db12a88242060be7332ceb595406d146; UM_distinctid = 160 f2bab2de3e - 075 c93693782be - 5 a442916 - 144000 - 160 f2bab2df60c; pgv_pvi = 3608032256; chkphone = acWxNpxhQpDiAchhNuSnEqyiQuDIO0O0O; bdshare_firstime = 1523760890619; CNZZDATA1262179648 = 1767882761 - 1515897679 - https % 253 A % 252 F % 252 Fwww.baidu.com % 252 F % 7 C1523878517; pgv_si = s8916923392; Hm_lvt_2d0601bd28de7d49818249cf35d95943 = 1523684986, 1523758601, 1523780794, 1523879628; robot = 1; Hm_lvt_9104989ce242a8e03049eaceca950328 = 1523512155, 1523544753, 1523758659, 1523879645; Hm_lpvt_9104989ce242a8e03049eaceca950328 = 1523879645; Hm_lvt_1a32f7c660491887db0960e9c314b022 = 1523512155, 1523544754, 1523758659, 1523879645; Hm_lpvt_1a32f7c660491887db0960e9c314b022 = 1523879645; browse = CFlZTVQKAE9cU1FMW0oaT1haUldcQVhNRFNbWFxBSUdaWVxAVEBbV1IKUkBYQFxGUhBSRFdLS0dZUlBYXkJER1lDWkZURVxPWldKTgdLXE1dUV9OHUtYTFNBWkVfSURFXU5YTU5BUE9dW1JEXVNSHFNWWUVYSFIGU1JRT0xDWURRTlhGQ0NQVVlTUkVdS1tDS1gBT1tGUUJQWBtPX0hTV1tTWU1DQV1YWFRIRFdLXEFTV1xXVRhTQFhXWEBVAlNEUFlKR15AUVhZV0VFVlFbRFNWUU9fQ0tOAFldRlpCXk4aWVlMVFNbRVhbRUVaXFhCSVFYT15EU0FfQVMcVERdRVBQUwZUQFBPS1FYRFZcWUFEUl5VX0FTQF1ZWkVMSgBPXFVRRF9KGk9YWlJXXEFYTURTXFheSElEWllbRVRFXVdSClJAVkJaRlIQUkRXS0tHWVJQWF5FRERYQ1pFVEBQT1hWSk4HS1xNXlpRTh1LWExTQVpFX0lERV1OWUVOQFxPWFZSQFdTUhxTVFBOHUtYTFNBWkVfSURFXU5ZRU5AXE9YVVJBWFNSHFNXX0BVAlNEUFlKR15AUVhZV0VEXlFbRFNWXk9eQUtOAFldQVlCXE4aWVlMVFNbRVhbRUVaXFhFSVFZT1tHU0VdQVMcVERRQVhWUwZUQFBPS1FYRFZcWUFEUllVX0NTRl1ZWkVMSgBPX1JbTV1KGk9YWlJXXEFYTURTXFhfQ0lEXVlZRFRFXVdSClJDX0ReQlIQUkRXS0tHWVJQWF5FRERaQ1lGVEVQT1tWSk4HS19EX1dRTh1LWExTQVpFX0lERV1OWUNOQFlPWlZSRFhTUgg; ci_session = 61 ef25a31707ca2e4aca5c072f778ef4068bcd64; Hm_lpvt_2d0601bd28de7d49818249cf35d95943 = 1523880868' # &#125; # # r = requests.get(url) # r.status_code # r.encoding = 'utf-8' # print(r.text)if __name__ == '__main__': main()]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA['python操作Excel']]></title>
    <url>%2F2018%2F04%2F16%2Fpython%E6%93%8D%E4%BD%9CExcel%2F</url>
    <content type="text"><![CDATA[0x00 安装openpyxlpip install openpyxl 我直接使用pycharm在当前项目安装了 0x01 读写Excel打开Excel文档1wb = openpyxl.load_workbook('ichunqiuCourse.xlsx') 取得工作表123wb.sheetnames #获得Excel每个表的名字sheet = wb['Sheet1'] #获得工作表，对工作表进行操作print(sheet['A1'].value) #获得Sheet1表格A1单元格的值 测试下面代码 12345678import openpyxlwb = openpyxl.load_workbook(&apos;ichunqiuCourse.xlsx&apos;)print(&apos;Excle的工作表有：&apos;+str(wb.sheetnames))sheet = wb[&apos;Sheet1&apos;]for i in [&apos;A&apos;,&apos;B&apos;,&apos;C&apos;,&apos;D&apos;]: print(sheet[str(i)+&apos;1&apos;].value+&apos;:&apos;+sheet[str(i)+&apos;2&apos;].value) 向Excel写入数据12345sheet['A3']= '社工情报侦察神器——Maltego'sheet['B3']= '免费'sheet['C3']= '7课时174分钟'sheet['D3']= '25651人学习'wb.save('ichunqiuCourse.xlsx') 成功写入数据 0x02完整代码123456789101112131415161718192021222324#!/usr/bin/python3# -*- coding: utf-8 -*-# @Time : 2018/4/16 22:08# @Author : Lhaihai# @File : controlExcel.py# @Software: PyCharm# @Blog : http://blog.Lhaihai.wang""" Description : 使用python读写Excel"""import openpyxlwb = openpyxl.load_workbook('ichunqiuCourse.xlsx')print('Excle的工作表有：'+str(wb.sheetnames))sheet = wb['Sheet1']for i in ['A','B','C','D']: print(sheet[str(i)+'1'].value+':'+sheet[str(i)+'2'].value)sheet['A3']= '社工情报侦察神器——Maltego'sheet['B3']= '免费'sheet['C3']= '7课时174分钟'sheet['D3']= '25651人学习'wb.save('ichunqiuCourse.xlsx') 注意：我看的《Python编程快速上手——让繁琐工作自动化》这本书，也许是这本书有点旧了，里面刚开始用的是 get_sheet_names 和get_sheet_by_name ，但是PyCharm会warning，提示建议使用 wb.sheetnames和wb[sheetname] 123DeprecationWarning: Call to deprecated function get_sheet_names (Use wb.sheetnames)DeprecationWarning: Call to deprecated function get_sheet_by_name (Use wb[sheetname]). 我搜到有人使用xlrd、xlwt包来操作Excel，但http://www.python-excel.org/推荐使用`openpyxl` 我也推荐用openpyxl ，因为它比那两个包方便很多。 至于一些字体大小也颜色也是可以设置的，就不写了，如果要用到就翻书吧。]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA['小米路由器开机自动登录Dr.COM']]></title>
    <url>%2F2018%2F04%2F16%2F%E5%B0%8F%E7%B1%B3%E8%B7%AF%E7%94%B1%E5%99%A8%E5%BC%80%E6%9C%BA%E8%87%AA%E5%8A%A8%E7%99%BB%E5%BD%95Dr-COM%2F</url>
    <content type="text"><![CDATA[0x00 小米路由开启SSH访问1.检查是否为开发版 2.如果不是开发版，到下面网址下在rom升级http://www1.miwifi.com/miwifi_download.html next 3.然后网页打开http://miwifi.com/cgi-bin/luci/web 进入管理页面手动升级 4.给小米路由安装SSH管理工具，具体看下面这篇百度经验，还是挺容易的https://jingyan.baidu.com/article/a24b33cd1080f719fe002b8e.html 注意：​ 在用SSH连接小米路由器时，不同路由器的IP地址可能不同，查看小米路由器的，下图圈起来来的IP地址就是SSH登录时的服务器IP，用户名是：root，密码：下载小米路由器SSH工具的页面有 0x01 测试Dr.com具体步骤查看下方网址： https://github.com/drcoms/drcom-generic/wiki/d%E7%89%88%E7%AE%80%E7%95%A5%E4%BD%BF%E7%94%A8%E5%92%8C%E9%85%8D%E7%BD%AE%E8%AF%B4%E6%98%8E 1.使用wireshark在官方客户端登录前开始截包，做一次完整的截包动作然后登出，保存为 wireshark截包文件, 比如 dr.pcapng (扩展名为pcapng)。 2.下载 d版配置生成器, 将其与第一步的截包文件放到同一个目录下，并且将第17行的 filename = &#39;3.pcapng&#39; 中的 dr.pcapng 改为第一步保存的文件名。 3.进入命令提示符(或shell)进入 drcom_d_config.py 所在目录，输入 python drcom_d_config.py &gt; config.txt ，打开 config.txt 根据提示，新建drcom.conf文件，复制类在似下方段落保存在drcom.conf文件中 123456789101112131415server = &apos;119.39.119.2&apos; //服务器ip地址username=&apos;02xxxxxxxxx@zndx&apos; //xxx是你的学号password=&apos;&apos;CONTROLCHECKSTATUS = &apos;\x20&apos;ADAPTERNUM = &apos;\x08&apos;host_ip = &apos;10.0.7.24&apos; //小米路由器的ip地址IPDOG = &apos;\x01&apos;host_name = &apos;GILIGILIEYE&apos;PRIMARY_DNS = &apos;192.168.31.1&apos;dhcp_server = &apos;0.0.0.0&apos;AUTH_VERSION = &apos;\x2d\x00&apos;mac = 0x000000000000host_os = &apos;NOTE7&apos;KEEP_ALIVE_VERSION = &apos;\xd8\x02&apos;ror_version = True 4.在自己电脑测试 保存https://github.com/drcoms/drcom-generic项目的latest-wired.py 到自己电脑（发现原来有python3版本的呀，苦逼的我为了用python2特地修改了下系统环境变量） 注意latest-wired.py使用python2执行，latest-wired-python3.py应该可以用python3执行，看官可以自己试一下，我没有测试。 傻傻的我直接打在windows打linux命令了 改一改绑定的端口就可以了，在73行 看到类似提示，那就是可以用了，这时候并没有成功连接Dr.com的服务器，因为我这是候还没有在drcom.conf配置文件的password打上我联通账号的密码。将 latest-wired.py 改名为 drcom.py 接下来就到小米路由器上测试了。 0x02设置小米路由器开机启动Dr.com下方网址的大哥写得很详细了，我就补充一下一些需要注意的地方： http://bbs.xiaomi.cn/t-12871940 1.配置开机自动运行 Dr. COM 登录脚本/etc/inittab可以使用WinSCP直接操作，不熟悉vim命令的话 使用vim的过程十分痛苦（有点反人类）,复制::respawn:/data/python/usr/bin/python /data/python/usr/bin/drcom.py 到inittab最后一行，Ctrl+S保存，退出 2.放配置文件 0x03 效果reboot路由器后，ps查看。等个几秒钟，就连上网了 0x04 后记昨晚弄好没有问题，早上起来用手机连上WiFi又弹出联通页面了。 putty连接小米路由器（小强root@XiaoQiang:~#)，刚开始我以为是联通服务器有问题掉线了，我偶尔遇到过Dr.com客户端断开连接，然后reboot重启下路由器。 再ps查看一下，咦，怎么没有我可爱的python进程（登录哆点的脚本） 最后检查了etc/inittab，没错就是添加 ::respawn:/data/python/usr/bin/python /data/python/usr/bin/drcom.py 这条语句的文件，发现这条语句没了，emmmm 加上去，再reboot一下就连上网了。 我猜可能是路由器自动恢复？还是刚好被我遇到了这个奇葩bug？ 后续想着设置一下每天自动执行 killall python，Linux是有cron个工具，类似于windows的task scheduler，可以设置定时启动某任务。]]></content>
      <categories>
        <category>趣味玩耍</category>
      </categories>
      <tags>
        <tag>小米路由器</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[python识别验证码]]></title>
    <url>%2F2018%2F04%2F15%2Fpython%E8%AF%86%E5%88%AB%E9%AA%8C%E8%AF%81%E7%A0%81%2F</url>
    <content type="text"><![CDATA[0x00 安装环境OCR(Optical Character Recognition): 光学字符识别,是指对图片文件中的文字进行分析识别，获取的过程。 Tesseract： 开源的OCR识别引擎，初期Tesseract引擎由HP实验室研发，后来贡献给了开源软件业，后经由Google进行改进，消除bug，优化，重新发布。当前版本为4.0 (安装教程是从这复制来的：http://www.inimei.cn/archives/297.html) 首先需要安装pytesseract库还有图像处理的PILLOW库了 12pip install pytesseractpip install PILLOW 然后要安装一个Tesseract-OCR软件。这个软件是由Google维护的开源的OCR软件。下载地址：百度网盘（密码：5m3d）。再在Windows下配置一下环境变量。 0x01报错：FileNotFoundError: [WinError 2] 系统找不到指定的文件。https://blog.csdn.net/jacke121/article/details/75443785 1pytesseract.pytesseract.tesseract_cmd = r&apos;C:\Program Files (x86)\Tesseract-OCR\tesseract.exe&apos; 0x02 报错：pytesseract.pytesseract.TesseractError: (1, ‘Error opening data file \Program Files (x86)\Tesseract-OCR\eng.traineddata1pytesseract.pytesseract.TesseractError: (1, &apos;Error opening data file \\Program Files (x86)\\Tesseract-OCR\\eng.traineddata Please make sure the TESSDATA_PREFIX environment variable is set to your &quot;tessdata&quot; directory. Failed loading language \&apos;eng\&apos; Tesseract couldn\&apos;t load any languages! Could not initialize tesseract.&apos;) 在.py 文件配置中指定 tessdata-dir 12tessdata_dir_config = '--tessdata-dir "D:\\Program Files (x86)\\Tesseract-OCR\\tessdata"'text = pytesseract.image_to_string(image,lang='chi_sim',config=tessdata_dir_config) 0x03 供上代码12345678910111213141516171819202122232425262728293031323334353637383940#!/usr/bin/env python3# -*- coding: utf-8 -*-# @Date : 2018-04-15 13:18:36# @Author : Lhaihai ($&#123;email&#125;)# @Link : http://blog.Lhaihai.wang# @Version : $Id$import pytesseractfrom PIL import Imagedef get_bin_table(threshold = 230): # 获取灰度转二值的映射table table = [] for i in range(256): if i &lt; threshold: table.append(0) else: table.append(1) return tabledef main(): pytesseract.pytesseract.tesseract_cmd = r'D:\Program Files (x86)\Tesseract-OCR\tesseract.exe' image = Image.open('1.jpg') # image.show() #打开图片1.jpg #imgry = image.convert('L') # 转化为灰度图，虽然说转为灰度图识别更好的一点，但随你喜欢用不用 #table = get_bin_table() #out = imgry.point(table, '1') tessdata_dir_config = '--tessdata-dir "D:\\Program Files (x86)\\Tesseract-OCR\\tessdata"' text = pytesseract.image_to_string(image,lang='eng',config=tessdata_dir_config) # fil = filter(str.isdigit, text) # new_text = '' # for i in fil: # new_text += i print(text)if __name__ == '__main__': main() 有时候可以识别出来，有时候识别不了，时好时坏吧 参考地址： https://blog.csdn.net/Sioon_XUX/article/details/78617160 http://www.cnblogs.com/zhongtang/tag/%E9%AA%8C%E8%AF%81%E7%A0%81%E8%AF%86%E5%88%AB/ https://blog.csdn.net/kiramario/article/details/53781369 https://github.com/tesseract-ocr/tesseract/wiki/4.0-with-LSTM#400-alpha-for-windows https://github.com/tesseract-ocr/tesseract/wiki/Data-Files https://github.com/madmaze/pytesseract https://github.com/tesseract-ocr/tesseract https://github.com/tesseract-ocr/tesseract/wiki]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[python+twilio发送短信]]></title>
    <url>%2F2018%2F04%2F14%2Fpython-twilio%E5%8F%91%E9%80%81%E7%9F%AD%E4%BF%A1%2F</url>
    <content type="text"><![CDATA[注册Twilio账号访问http://twilio.com/并填写注册表单。注册了新账户后，你需要验证一个手机号码，短信将发给该号码（这项验证是必要的，防止有人利用该服务向任意的手机号码发送垃圾短信）。收到验证号码短信后，在Twilio网站上输入它，证明你拥有要验证的手机。现在，就可以用twilio模块向这个电话号码发送短信了。 1、获取一个Twilio电话号码：https://support.twilio.com/hc/en-us/articles/223136107-How-does-Twilio-s-Free-Trial-work-/ 2、要验证接收短信的手机号码，要不然就会报错1twilio.base.exceptions.TwilioRestException: HTTP 400 error: Unable to create record: The number +8613xxxxxx30 is unverified. Trial accounts cannot send messages to unverified numbers; verify +8613xxxxxx30 at twilio.com/user/account/phone-numbers/verified, or purchase a Twilio number to send messages to unverified numbers. 到这个网址验证手机号码：https://www.twilio.com/console/phone-numbers/verified 可以发送短信验证码或者打电话输入验证码 3、官方文档https://www.twilio.com/docs/libraries/python 发送短信123456789101112131415from twilio.rest import Client# Your Account SID from twilio.com/consoleaccount_sid = "AC9810ae2342f0014cd05e338bce9be8cb"# Your Auth Token from twilio.com/consoleauth_token = "your_auth_token"client = Client(account_sid, auth_token)message = client.messages.create( to="+15558675309", from_="+15017250604", body="Hello from Python!")print(message.sid) 效果如下： tip1:to=”+15558675309” to的值是接收短信的手机号码，注意的是，中国大陆的电话号码要在前面加上+86 tip2：python文件的命名不能是twilio.py 如果你像我一样给它这样命名，在导入twilio库的时候会失败，提示unuseful rest 哈哈，宛如一个智障（自我嘲讽一波） 找找stackoverflow.com发现下面这个： https://stackoverflow.com/questions/41013556/importerror-cannot-import-name-twiliorestclient tip3:封装一下函数，（并且放在python.exe当前目录，方便其它python文件调用），就方便使用了 1sendMessage('tophonenumber','Happy to do this') tip4：github项目 https://github.com/twilio/twilio-python/ 打电话12345678910from twilio.rest import Clientaccount = "ACXXXXXXXXXXXXXXXXX"token = "YYYYYYYYYYYYYYYYYY"client = Client(account, token)call = client.calls.create(to="9991231234", from_="9991231234", url="http://twimlets.com/holdmusic?Bucket=com.twilio.music.ambient")print(call.sid) 只能打电话过来，说几句英语，不能沟通 Handling a call using TwiML（偷个懒直接从github复制） To control phone calls, your application needs to output TwiML. Use twilio.twiml.Response to easily create such responses. 12345from twilio.twiml.voice_response import VoiceResponser = VoiceResponse()r.say("Welcome to twilio!")print(str(r)) 最后还是不知道怎么实现打电话双向通话(；へ：) 参考链接： https://baijiahao.baidu.com/s?id=1593431889367189831&amp;wfr=spider&amp;for=pc]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo 学习笔记]]></title>
    <url>%2F2018%2F04%2F13%2Fhexo-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%2F</url>
    <content type="text"><![CDATA[参考链接： Hexo博客教程(一):Hexo的前期部署：https://www.jianshu.com/p/9f04ee6371ce Hexo博客教程(二):基本功能和网站优化：https://www.jianshu.com/p/2a70262295e4 Hexo博客教程(三):参考资料https://www.jianshu.com/p/8f727b4c3cd1 设置访问次数统计不蒜子统计 http://theme-next.iissnan.com/third-party-services.html#analytics-busuanzi]]></content>
      <categories>
        <category>GitHub hexo建站</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Daily Plan]]></title>
    <url>%2F2018%2F04%2F13%2FDaily-plan%2F</url>
    <content type="text"><![CDATA[python 写一个自动签到，签到成功发送短信到我手机，还会定时启动]]></content>
      <categories>
        <category>good</category>
      </categories>
      <tags>
        <tag>plan</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F04%2F13%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
      <categories>
        <category>good</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[网站目录结构扫描器]]></title>
    <url>%2F2018%2F03%2F13%2F%E7%BD%91%E7%AB%99%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84%E6%89%AB%E6%8F%8F%E5%99%A8%2F</url>
    <content type="text"><![CDATA[0x00 cansinaInstall12345pip install --user requests[security](try removing --user and install with sudo in case of errors)git clone --depth=1 https://github.com/deibit/cansina Fast useUse Python 3 (works on Python 2 too, but 3 is advisable) 1$ python3 cansina.py -u &lt;site_url&gt; -p &lt;payload_file&gt; 0x01 dirsearchinstall(need Python 3.X)Linux: 123git clone https://github.com/maurosoria/dirsearch.gitcd dirsearch/./dirsearch.py -u 目标网址 -e * Windows: https://github.com/maurosoria/dirsearch/archive/master.zip Fast use12./dirsearch.py -u 目标网址 -e *./dirsearch.py -u 目标网址 -e php| grep 200 !dirsearch]]></content>
      <categories>
        <category>Web安全</category>
      </categories>
      <tags>
        <tag>python Web安全</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[N1CTF笔记]]></title>
    <url>%2F2018%2F03%2F11%2FN1CTF%E7%AC%94%E8%AE%B0%2F</url>
    <content type="text"><![CDATA[https://3wapp.github.io/ http://blog.csdn.net/lacoucou/article/details/72355346 Dockerfile easy php substr(md5(?), 0, 5)=== de426 substr() 函数返回字符串的一部分。 注释：如果 start 参数是负数且 length 小于或等于 start，则 length 为 0。 语法12substr(string,start,length) 参数 描述 string 必需。规定要返回其中一部分的字符串。 start 必需。规定在字符串的何处开始。正数 - 在字符串的指定位置开始负数 - 在从字符串结尾开始的指定位置开始0 - 在字符串中的第一个字符处开始 length 可选。规定被返回字符串的长度。默认是直到字符串的结尾。正数 - 从 start 参数所在的位置返回的长度负数 - 从字符串末端返回的长度 http://www.beesfun.com/2017/03/21/CTF%E4%B9%8BMD5%E6%88%AA%E6%96%AD%E6%AF%94%E8%BE%83/ submd5.py 12345678910111213141516171819202122232425262728# -*- coding: utf-8 -*-import multiprocessingimport hashlibimport randomimport stringimport sysCHARS = string.letters + string.digitsdef cmp_md5(substr, stop_event, str_len, start=0, size=20): global CHARS while not stop_event.is_set(): rnds = ''.join(random.choice(CHARS) for _ in range(size)) md5 = hashlib.md5(rnds) if md5.hexdigest()[start: start+str_len] == substr: print rnds stop_event.set()if __name__ == '__main__': substr = sys.argv[1].strip() start_pos = int(sys.argv[2]) if len(sys.argv) &gt; 1 else 0 str_len = len(substr) cpus = multiprocessing.cpu_count() stop_event = multiprocessing.Event() processes = [multiprocessing.Process(target=cmp_md5, args=(substr, stop_event, str_len, start_pos)) for i in range(cpus)] for p in processes: p.start() for p in processes: p.join() 用法： 1234$ python submd5.py "3d4f4"SponhjOhIZ30IaM1fweb$ python submd5.py "3df4" 2G8tr6VhonA1z3xJdaGBu]]></content>
      <categories>
        <category>CTF比赛</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[GitHub hexo建站笔记]]></title>
    <url>%2F2018%2F03%2F11%2FGitHub-hexo%E5%BB%BA%E7%AB%99%E7%AC%94%E8%AE%B0%2F</url>
    <content type="text"><![CDATA[有用的链接：12https://github.com/iissnan/hexo-theme-next/blob/master/README.cn.mdhttp://theme-next.iissnan.com/getting-started.html 0x01 Cannot GET /tags/执行 1$ hexo new page tags 之后，要修改tags文件下的index.md文件 https://www.zhihu.com/question/29017171 0x02 这里有两篇帮你不需要什么成本，搭建好一个功能完备的博客： 如何搭建一个独立博客——简明Github Pages与Hexo教程 https://www.jianshu.com/p/05289a4bc8b2 hexo 博客小功能添加-评论、相册、字数统计… https://www.jianshu.com/p/f5c184047e72]]></content>
      <categories>
        <category>GitHub hexo建站</category>
      </categories>
      <tags>
        <tag>博客</tag>
      </tags>
  </entry>
</search>
